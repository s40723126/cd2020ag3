var tipuesearch = {"pages": [{'title': 'About', 'text': '此內容管理系統以\xa0 https://github.com/mdecourse/cmsimde \xa0作為 submodule 運作, 可以選定對應的版本運作, cmsimde 可以持續改版, 不會影響之前設為 submodule, 使用舊版 cmsimde 模組的內容管理相關運作. \n 利用 cmsimde 建立靜態網誌方法: \n 1. 在 github 建立倉儲, git clone 到近端 \n 2. 參考\xa0 https://github.com/mdecourse/newcms , 加入除了 cmsimde 目錄外的所有內容 \n 以 git submodule add\xa0 https://github.com/mdecourse/cmsimde \xa0cmsimde \n 建立 cmsimde 目錄, 並從 github 取下子模組內容. \n 3.在近端維護時, 更換目錄到倉儲中的 cmsimde, 以 python wsgi.py 啟動近端網際伺服器. \n 動態內容編輯完成後, 以 generate_pages 轉為靜態內容, 以 git add commit 及 push 將內容推到遠端. \n 4. 之後若要以 git clone 取下包含 submodule 的所有內容, 執行: \n git clone --recurse-submodules  https://github.com/mdecourse/newcms.git \n', 'tags': '', 'url': 'About.html'}, {'title': 'Develop', 'text': 'https://github.com/mdecourse/cmsimde \xa0的開發, 可以在一個目錄中放入 cmsimde, 然後將 up_dir 中的內容放到與 cmsimde 目錄同位階的地方, 使用 command 進入 cmsimde 目錄, 執行 python wsgi.py, 就可以啟動, 以瀏覽器 https://localhost:9443\xa0就可以連接, 以 admin 作為管理者密碼, 就可以登入維護內容. \n cmsimde 的開發採用 Leo Editor, 開啟 cmsimde 目錄中的 cmsimde.leo 就可以進行程式修改, 結束後, 若要保留網際內容, 只要將 cmsimde 外部的內容倒回 up_dir 目錄中即可後續對 cmsimde 遠端倉儲進行改版. \n init.py 位於\xa0 up_dir 目錄, 可以設定 site_title 與 uwsgi 等變數. \n', 'tags': '', 'url': 'Develop.html'}, {'title': 'Group', 'text': 'Repository:\xa0 40723103 \xa0 | Site: \xa0 40723103 Repository: \xa0 40723110 \xa0 | Site: \xa0 40723110 \xa0 (group leader) Repository: \xa0 40723112 \xa0 | Site: \xa0 40723112 Repository: \xa0 40723120 \xa0 | Site: \xa0 40723120 Repository: \xa0 40723125 \xa0 | Site: \xa0 40723125 Repository: \xa0 40723126 \xa0 | Site: \xa0 40723126 Repository: \xa0 40723128 \xa0 | Site: \xa0 40723128 Repository: \xa0 40723130 \xa0 | Site: \xa0 40723130 Repository: \xa0 40723139 \xa0 | Site: \xa0 40723139 Repository: \xa0 40723142 \xa0 | Site: \xa0 40723142 Repository: \xa0 40723145 \xa0 | Site: \xa0 40723145 Repository: \xa0 40723146 \xa0 | Site: \xa0 40723146 \n', 'tags': '', 'url': 'Group.html'}, {'title': 'WEEK', 'text': '每周都要交進度 \n', 'tags': '', 'url': 'WEEK.html'}, {'title': 'week 3', 'text': '\n taskleader :40723145 40723126 40723146 \xa0 \xa0 \xa0 1. Describe how to do an efficient random grouping for this course or do the roll calling randomly? \n taskleader :40723110 40723112 40723130 \xa0 \xa0 \xa0 2. Describe how to prepare a portable Python programming system for Windows 10 64bit system to allow one the maintain CMSiMDE website, Pelican blog and Reveal.js presentation on Github? \n taskleader :40723125 40723103 40723120 40723142 \xa0 \xa0 \xa0 \xa03. What do you need to know from http://www.coppeliarobotics.com/helpFiles/index.html to implement a four-wheeled robot? \n w3開會紀錄 \n ================================================================= \n', 'tags': '', 'url': 'week 3.html'}, {'title': 'week 4', 'text': "taskleader :40723110 40723112 40723130 40723145 40723126 40723142 \n \xa0 \xa0 \xa0 \xa0 \xa0 \xa01. According to the material of Topic 0 and Topic 1, can you describe specifically what the mechanical design team need to do for accomplishing Assignment 1's four wheeled robot. \n Topic 0: From Digital\xa0to Industrial + Engineering Product Design Collaboration \n Login to your gm email account and download \n DigitalProductCollaboration.pdf \n IndustrialAndEngineeringProductDesignCollaboration.pdf \n Can we create an english-english vocabulary collection service? \n https://www.autoitscript.com/forum/files/file/419-dictionary_bigdb/ \n Topic 1: Mechanical Design Process \n Login to your gm email account and download \xa0 MechanicalDesignProcess.pdf . \n (Can we build online tools to facilitate these processes?) \n Successful Design \n Building the\xa0Design \n Structural Considerations \n Materials and\xa0Processes \n \n taskleader :40723125 40723103 40723120 40723146 \n \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 2. What do you need to know from\xa0 https://cyberbotics.com/doc/guide/index \xa0 to implement a four-wheeled robot? \n \n", 'tags': '', 'url': 'week 4.html'}, {'title': 'week 5', 'text': 'Tomb Sweeping Day \n', 'tags': '', 'url': 'week 5.html'}, {'title': 'week6', 'text': '\n \n', 'tags': '', 'url': 'week6.html'}, {'title': 'Topic', 'text': 'Topic 0: From Digital\xa0to Industrial + Engineering Product Design Collaboration \n Topic 1: Mechanical Design Process \n Topic 2: Mechatronic System Design \n Topic 3: Mechatronic Future and Challenges \n', 'tags': '', 'url': 'Topic.html'}, {'title': 'Topic 0', 'text': '', 'tags': '', 'url': 'Topic 0.html'}, {'title': 'DigitalProductCollaboration', 'text': 'DigitalProductCollaboration \n P1. \n Digital products are more complex today than ever before. Creating them requires multiple team members, each with their own set of skills and expertise. At Savvy, for example, our customers work closely with: a product manager, UX designer, visual designer, developer(s), content strategist, and a growth specialist. \n 今天，數位產品比以往任何時候都更加複雜。 產出這些產品需要多個團隊，每個團隊成員都有自己的一套技能和專業知識。 例如，在Savvy，我們的客戶與以下人員緊密合作：產品經理，UX(user experience)設計師，視覺設計師，開發人員，內容策略師和成長專家。 \n We use design collaboration to handle this complexity. Done right, design collaboration empowers each of those experts with the mindset, process, and tools to come together and build a better product faster. \n 我們使用設計協作來處理這種複雜性。 如果處理恰當，設計協作將使每位專家都擁有思維方式，過程和工具，進而團結起來，更快地構建更好的產品。 \n We wrote this resource to help other app creators adopt a collaboration culture and process. Read on to learn why design collaboration is important for creating compelling products and experiences. We\'ll also dive into the elements of a design collaboration mindset and culture, tools for effective design collaboration, and a real-world example of design collaboration at work. \n 我們寫這個資源是為了幫助其他應用程序創建者採用協同合作文化和流程。 繼續閱讀以了解為什麼設計協作對於創建引人注目的產品和體驗很重要。 我們還將深入探討設計協同合作思想和文化的原理，有效設計協作的工具，以及工作中設計協作的真實示例。 \n What is "Design" Collaboration? 什麼是“設計”協同合作？ \n Before we jump into it, we need to get on the same page about what design collaboration is... and is not. At its simplest, design collaboration is collaboration in a design-first environment. But, because of the nature of design, especially the design we do at Savvy, design collaboration tends to go beyond what people normally think of as collaboration. 在進入之前，我們需要在同一頁面上了解什麼是設計協同合作，甚麼不是。簡單來說，設計協同合作就是在設計優先的環境中進行協同合作。但是，由於設計的本質，尤其是我們在Savvy所做的設計，設計協同合作往往會超出人們通常認為的協同合作範圍。 \n While collaboration is generally defined as two or more people working together on the same task towards a common goal, design collaboration involves much more. 通常將協同合作定義為兩個或兩個以上的人在共同的目標上共同努力，而設計協同合作則涉及更多。 \n Design collaboration includes more people with different skillsets, tougher challenges, and bigger goals with farther-reaching impacts. 設計協同合作包括更多具有不同技能的人，更艱鉅的挑戰和影響深遠的更大目標。 \n You might think of collaboration as two people hanging a piece of art. It simply requires communication, teamwork, and four hands. Design collaboration is when a team of curators carefully design a visitor\'s experience. They select the art, choose where and how to hang it, which room it lives in (and the room\'s lighting, furniture), even the preceding rooms and the building as a whole. 您可能將協同合作視為兩個人掛在一塊藝術品上。它只需要溝通，團隊合作和四隻手。設計協同合作是指一群策畫者精心去設計顧客的體驗。他們(策畫者)選擇藝術品(兩個人)，選擇在何處以及如何懸掛藝術品，它所居住的房間（以及房間的照明，家具），甚至是先前的房間以及整個建築物。 \n Why Design Collaboration is Important 為什麼設計協作很重要 \n You can design a product without collaboration, but it takes a collaborative design process to make that product great. That\'s why design collaboration is so fundamental. 您可以在沒有協同合作的情況下設計產品，但是要通過協同合作設計過程才能使該產品變得更好。 這就是設計協同合作如此重要的原因。 \n We don\'t just build apps for our customers. Savvy builds multi-platform experiences, complex internal systems, and in some cases, entire brands and businesses. To do so, we leverage expertise across several core disciplines: strategy, design, development, and growth. Each project involves many people, each with their own skillsets and specialties. \n 我們不僅為客戶構建應用程序。 Savvy建立了多平台的體驗，複雜的內部系統，在某些情況下還建立了整個品牌和業務。 為此，我們利用跨多個核心學科的專業知識：策略，設計，開發和成長。 每個項目涉及很多人，每個人都有自己的技能和專長。 \n Design collaboration puts those minds together, combining their separate, specialized expertise to create solutions that tackle all aspects of a shared goal. Instead of coming at a problem from one angle, design collaboration places that problem in front of all experts, forcing them to consider new perspectives and possibilities. 設計協同合作將這些思想融合在一起，結合他們各自的專業知識，共同創建解決方案，以解決共同目標的各個方面。 設計協作不是從一個角度來解決問題，而是將這個問題擺在所有專家面前，迫使他們考慮新的觀點和可能性。 \n', 'tags': '', 'url': 'DigitalProductCollaboration.html'}, {'title': 'Topic 1', 'text': 'Machanical Design Process \n Ch1 Successful\xa0 Design \n 前言: \n 此章節主要在介紹電子產品的外殼設計以及定義"成功的設計"。 \n 我們將討論設計者的角色在產品設定中的要求，設計者適合整體產品的開發圖，重要的溝通和起初的因素皆被考慮在開始設計時。 \n 在開始設計前先簡略地定義什麼是"電子產品"，它含有電路板且通常都有輸入輸出裝置例如LCD，舉例來說電子產品包括手機、數位相機、超聲波牙刷。 \n 電子產品的外殼是圍繞和支撐電路板，外殼讓裝置可供消費者使用，為了保護電子裝置來自於外在環境的震動(例如手機摔落)。 \n 在本質上，成功的外殼設計須符合產品書面規格並在設置的價格和時間內完成，現在開始探索這些外殼的設計過程。 \n 1.1 設計指南 \n 設計指南 \n \xa0 \xa0 \xa0 \xa0 設計者將會在作業上使用很多導覽，此文有意提供一般幫助且幫助增加設計者過去全部的經驗和他們現在的組織建立流程。 \n 電子產品外殼(EPE) \n \xa0 \xa0 \xa0 \xa0 電子產品由外部和內部結構元件組成的產品，它包含任何用於使用者接頭的硬體，用於任何連接線的連接器和任何使用者會實質感受到和看到的元件，許多電子外殼包含一個或多個PCBA，而且這些必須在一般使用下被嚴格保護。 \n \xa0 \xa0 \xa0 \xa0 一個外殼可以非常簡單或是極度複雜能由數千個零件組成，設計者的首要任務是定義他們正在設計的"系統"，這被包含在後續的章節，"外殼"此詞將會被以較不複雜的結束在此範圍，而解釋方法可以被延伸到更複雜的設計情況。 \n EPE設計者 \n \xa0 \xa0 \xa0 \xa0 這是負責設計電子產品外殼的人，在很多情況下，這是位機械工程師，但它可以是有機械工程背景或相關專業經驗的人，一位好的EPE設計者有以下特性: \n \n 理解和確認產品規格的能力 \n 能夠增加或幫忙建立產品規格 \n 為產品產生的問題建立有創意的解決方案 \n \n 因此EPE設計者需要有創造力和遵循專案的主要目標。', 'tags': '', 'url': 'Topic 1.html'}, {'title': 'Assignment1', 'text': '', 'tags': '', 'url': 'Assignment1.html'}, {'title': 'Assignment -1 report', 'text': 'https://github.com/s40723110/cd2020ag3/tree/master/PDF \n Random grouping report \n', 'tags': '', 'url': 'Assignment -1 report.html'}, {'title': 'Python3.8.2', 'text': 'basic Win10 portable programming \n 在你的可攜下創建一個data子目錄\xa0 :\xa0\xa0 \n \n --everything-is-local\xa0 \xa0 \n https://git-scm.com/download/win \xa0 \xa0 \xa0 \xa0 \xa0 \n 要用git指令要有portablegit 。data下子目錄存取為portablegit(需與啟動檔配合)。 \n start.bat (參考) : \n \n \n \n https://www.python.org/downloads/ \n 選取需要的版本(EX : 3.8.2)\xa0 \n 點取執行檔 Windows x86-64 executable installer \n data下子目錄 存取的名稱要跟執行檔相配合(EX : py38) \n \n \n \n \n \n \n Download Scintilla and SciTE \n \n \n \n 編輯器(用來創建start.bat , stop.bat) https://www.scintilla.org/SciTEDownload.html \n 解開檔案為wscite \n 通過打開SciTE.exe\xa0 \\ Option \\ Open Global Options File \n 找到code.page的部分 , 把code.page=0給註記掉 , 並把code.page=65001取消註記 \n \n \n start.bat\xa0 : \n \n \n \n \n \n \n 1 \n 2 \n 3 \n 4 \n 5 \n 6 \n 7 \n 8 \n 9 \n 10 \n 11 \n 12 \n 13 \n 14 \n 15 \n 16 \n 17 \n 18 \n 19 \n 20 \n 21 \n 22 \n 23 \n 24 \n 25 \n 26 \n 27 \n 28 \n 29 \n 30 \n 31 \n 32 \n 33 \n 34 \n 35 \n 36 \n 37 \n 38 \n 39 \n 40 \n 41 \n 42 \n 43 \n \n \n \n @echo off \n set Disk=y \n subst %Disk%: "data" \n \xa0 \n %Disk%: \n \xa0 \n set HomePath=%Disk%:\\home_mdecourse \n set HomeDrive=%Disk%:\\home_mdecourse \n set Home=%Disk%:\\home_mdecourse \n set USERPROFILE=%Disk%:\\home_mdecourse \n \xa0 \n REM for putty \n set GIT_HOME=%Disk%:\\portablegit\\bin\\ \n set GIT_SSH=%Disk%:\\putty\\plink.exe \n \xa0 \n REM 將系統 Python 程式的 io 設為 utf-8 \n set PYTHONIOENCODING="utf-8" \n \xa0 \n set PYTHONPATH=%Disk%:\\py38\\DLLs;%Disk%:\\py38\\Lib;%Disk%:\\py38\\Lib\\site-packages; \n set PYTHONHOME=%Disk%:\\py38 \n \xa0 \n set path_python=%Disk%:\\py38;%Disk%:\\py38\\Scripts; \n set path_msys2=%Disk%:\\msys64\\mingw64\\bin; \n REM coreutils is for compiling fossil scm \n set path_coreutils=%Disk%:\\coreutils-5.3.0\\bin;%Disk%:\\depends22_x64; \n set path_tcc=%Disk%:\\tcc; \n set path_cmake=%Disk%:\\cmake-3.10.1-win64-x64\\bin; \n set path_nodejs=Disk%:\\nodejs;%Disk%:\\nodejs\\appdata\\roaming\\npm; \n set path_git=%Disk%:\\portablegit\\bin; \n set path_xming=%Disk%:\\Xming; \n set path_latex=%%Disk%:\\Pandoc;%Disk%:\\TinyTeX\\bin\\win32; \n \xa0 \n path=%Disk%:;%path_python%;%path_msys2%;%path_tcc%;%path_git%;%path_cmake%;%path_coreutils%; \n \xa0 \n start /MIN cmd.exe \n start /MIN cmd.exe \n start /MIN cmd.exe \n start /MIN cmd.exe \n \xa0 \n start /MIN %Disk%:\\wscite\\SciTE.exe \n start /MIN %Disk%:\\wscite\\SciTE.exe \n \xa0 \n Exit \n \n \n \n \n \n \n \n \n stop.bat \n \n \n \n \n \n \n 1 \n 2 \n 3 \n 4 \n 5 \n 6 \n 7 \n 8 \n 9 \n 10 \n 11 \n 12 \n 13 \n 14 \n \n \n \n @echo off \n set Disk=y \n path=%PATH%; \n \xa0 \n taskkill /IM python.exe /F \n taskkill /IM pythonw.exe /F \n taskkill /IM node.exe /F \n taskkill /IM Range.exe /F \n taskkill /IM SciTE.exe /F \n REM 終止虛擬硬碟與目錄的對應 \n subst %Disk%: /D \n REM 關閉 cmd 指令視窗 \n taskkill /IM cmd.exe /F \n EXIT \n \n \n \n \n \n \n \n - \n 假使要快速比較修改前後 :，可使用一個工具 :\xa0 \n \xa0 KDiff3 - Home \n http://kdiff3.sourceforge.net/ \n \n \n 可即時看到檔案間的差別 \n 也可以用來比較 Tiny C Compiler\xa0\xa0 \n https://directory.fsf.org/wiki/Tiny_C_Compiler \xa0\xa0 檔案編輯前後的差異 \n \n \n https://bellard.org/tcc/ \n \n pip \n get-pip.py 頁面存取成data下的get-pip.py \n 再繼續用 : \n \n \n \n \n \n \n 1 \n \n \n \n python -m pip install flask lxml bs4 flask-cors Markdown pelican leo \n \n \n \n \n \n \n \n 下載網際系統相關套件 \n \n HxD - Freeware Hex Editor and Disk Editor \n \n \n \n \n https://mh-nexus.de/en/hxd/ \xa0 \xa0 \xa0 \n 選取該version區目前適合的版本 \n 利用 HxD 修改 pip.exe 中python.exe 的所在位置(pip.exe是存取在p38的Scripts裡) , HxD 開啟之後搜尋c:\\py38\\python.exe , 然後將滑鼠停在 c 然後輸入y:\\p37\\python.exe, 以便讓可攜系統啟動後, 可以將指令搜尋路徑設到 y:\\p38\\Scripts , 這樣就可以直接以\xa0 "pip install " 指令安裝套件. \n \n \n \n \n \n \n 1 \n \n \n \n pip install Flask Markdown lxml bs4 flask_cors pelican leo \n \n \n \n \n \n \n \n MSYS2 installer \n \n MSYS2 :\xa0 https://www.msys2.org/ \n \n 接著設定start.bat \n \n \n \n \n \n \n 1 \n 2 \n 3 \n 4 \n \n \n \n REM 設定 msys2 64 位元的執行路徑 \n set path_msys2=%Disk%:\\msys64\\mingw64\\bin; \n \xa0 \n path=%Disk%:;%path_python%;%path_git%;%path_msys2%; \n \n \n \n \n \n \n \n \n ShareX \n ShareX :\xa0 https://getsharex.com/ \n \n \n Tmp (Y\\tmp : git clone .....) \n \n \n https://github.com/flutter/flutter \n \n Fossil \n \n https://www.fossil-scm.org/index.html/doc/trunk/www/build.wiki \n \n \n \n putty\xa0 putty \n \n', 'tags': '', 'url': 'Python3.8.2.html'}, {'title': 'CoppeliaSim', 'text': 'Assignment 1-3分工 \n https://www.coppeliarobotics.com/helpFiles/index.html \n \n \n CoppeliaSim 高度可定制的模擬器，可以自定義模擬的每個方面。此外對於機器人學習者可以大大降低學習成本。 \n 機器人設計工具可以透過v-rep裡的模擬平台，加入相關引擎、物理碰撞等旋轉功能。 \n v-rep是一款靈活、可拓展的通用機器人模擬器，支持六種不同的編程或編碼方法，每種方法都具有相對於其他方法的特殊優點（顯然還有缺點），但所有六種方法都是相互兼容的（即可以同時使用，甚至可以協同使用）。 \n 這可以通過精心設計的應用程序編程接口（API）來實現。 \n', 'tags': '', 'url': 'CoppeliaSim.html'}, {'title': 'coppeliaSim心得', 'text': '40723125(task leader) \n 40723103 \n 心得: \n 首先簡略瀏覽關於coppeliaSim用戶手冊中所負責的部分區域檢視，大略看過標題及裡面分支出來的內容後，針對使用介面之解說有做進一步了解，甚至有做出特定使用者介面使少數特定族群受惠，對於視圖與位置操作方向也詳細說明並加入快捷鍵使用方式以及命令行的詳細解說。 \n 僅看第一個標題的內容就發現到以上幾個需要特別注意的重點，剩餘兩個標題所表達之內容便偏向於外部環境設定與模組方面的專業知識，藉由圖例所輔助說明能較為知道手冊所想表達的意涵，也能修正對於單單只看文字而想像出操作步驟與有附真實圖例比較之下的差異性，並導正之間所產生的誤會，也可以從而對內容加深印象。 \n 雖然負責的部分只有三個標題的內容，不過卻蘊含這麼多需要注意的細節，也覺得不管是哪個部分都很重要，未來也會和隊友相互交流知道的資訊，以能平衡之間未能負責的區域內容。 \n 以下為所負責之項目內容 \n 1 -使用者介面(包含快捷鍵、視圖與頁面、命令列、操作方向與位置) \n 2 -場景與模組 \n 3 -環境設定、操作 \n 40723120 \n 40723142 \n', 'tags': '', 'url': 'coppeliaSim心得.html'}, {'title': 'User interface', 'text': '1- Pages and views \n 2- Custom UIs \n 3- Position/orientation manip ulation \n 4- Euler angles \n 5- User settings \n 6- Shortcuts \n 7- Command line \n', 'tags': '', 'url': 'User interface.html'}, {'title': 'Scenes and models', 'text': '1- Scenes \n 2- Models \n 3- Model dialog \n', 'tags': '', 'url': 'Scenes and models.html'}, {'title': 'Environment', 'text': '1- Environment dialog \n 2- Texture dialog \n', 'tags': '', 'url': 'Environment.html'}, {'title': '環境', 'text': 'scenes \n \n 場景和模型是CoppeliaSim的主要模擬元素。 模型是場景的子元素，明確標記為模型。 \n models \n \n 模型是場景的子元素。 除了文件（“ * .ttm”-文件類型）外，模型本身不能存在，也不能通過自身進行模擬。 模型必須包含在場景中才能運行。 \n 通過在同一層次樹上構建的場景對象的選擇來定義模型，其中樹的基礎必須是標記為對像是模型基礎的對象。 \n \n environment \n \n CoppeliaSim中的環境定義了屬於場景但不屬於場景對象的屬性和參數。 保存模型時不保存環境屬性和參數，而僅保存場景時不保存。 \n entities \n \n 實體是指場景對像或集合的術語。\xa0 \n', 'tags': '', 'url': '環境.html'}, {'title': 'Entities', 'text': 'Entities 實體 An entity is a term that refers to a scene object or a collection. 實體是指 場景物件 或 集合體 的專業術語 \n', 'tags': '', 'url': 'Entities.html'}, {'title': 'Calculation modules', 'text': 'Scene objects  場景物件 The main elements in CoppeliaSim that are used for building a simulation scene are scene objects (objects in short). CoppeliaSim中用於構建模擬場景的主要元素是場景物件（簡而言之） Objects are visible in the scene hierarchy and in the scene view.  物件在場景層次結構和場景視圖中可見。 In the scene view, objects have a three dimensional representation as illustrated in following figure: 在物件視圖中，物件具有三維表示，如下圖所示： Following list gives a brief functional description of each object type: 以下列表簡要介紹了每種物件類型的功能： \n ● Shapes : a shape is a rigid mesh that is composed of triangular faces. 形狀：形狀是由三角形面組成的剛性網格。 ● Joints : a joint object is a joint or actuator. Four types are supported: revolute joints, prismatic joints, screws and spherical joints. 關節：關節物件是關節或執行器。四種類型支持架：旋轉接頭，棱柱接頭，螺釘和球形接頭。 ● Graphs : a graph is used to record and visualize simulation data. 圖形：圖形用於記錄和可視化模擬數據。 ● Dummies : a dummy is a point with orientation. Dummies are multipurpose objects that can have many different applications. 假人：假人是具有定向的點。假人是可以具有許多不同應用程序的多用途對象。 ● Proximity sensor s : a proximity sensor detects objects in a geometrically exact fashion within its detection volume. CoppeliaSim supports pyramid-, cylinder-, disk-, cone- and ray-type proximity sensors. 接近傳感器：接近傳感器以幾何精確的方式在其檢測範圍內檢測物體。 CoppeliaSim支持金字塔型，圓柱型，圓盤型，圓錐型和射線型接近傳感器。 ● Vision sensors : a vision sensor is a camera-type sensor, reacting to light, colors and images. 視覺傳感器：視覺傳感器是一種相機型傳感器，對光線，顏色和圖像有反應。 ● Force sensors : a force sensor is an object able to measure forces and torques that are applied to it. It also has the ability to break if a given threashold is overshot. 力傳感器：力傳感器是能夠測量施加到其上的力和扭矩的對象。 如果給定的閾值被超出，它也具有打破的能力。 ● Cameras : a camera is an object that allows seeing the simulation scene from various view points. 攝影機：攝影機是一個可以從各個角度查看模擬場景的對象。 ● Lights : a light is an object that allows illuminating the simulation scene. 燈光：燈光是一個可以照亮模擬場景的對象。 ● Paths : a path is an object that defines a path or trajectory in space. It can be used for various purposes, also as a customized joint or actuator. 路徑：路徑是在空間中定義路徑或軌蹟的對象。 它可以用於各種目的，也可以用作定制的接頭或執行器。 ● OC trees : an OC tree is a spacial partitioning data structure made up by voxels. OC樹：OC樹是由體素組成的空間分區數據結構。 ● Point clouds : a point cloud is an OC tree structure that contains points. 點雲：點雲是包含點的OC樹結構。 Some of above objects can have special properties allowing other objects or calculation modules to interact with them. Objects can be: 以上某些物件可以具有特殊的屬性，從而允許其他物件或計算模塊與它們進行交互。物件可以是： ● Collidable \xa0 \xa0 \xa0 \xa0可碰撞 ● Measurable \xa0 \xa0 可衡量的 ● Detectable \xa0 \xa0 \xa0可檢測的 ● Renderable \xa0 \xa0 可呈現 ● Viewable \xa0 \xa0 \xa0 \xa0 可見的 Collections  集合 A collection is a user-defined collection of scene objects. 集合是場景物件的用戶定義集合。  A collection has to contain at least one object and is considered to be an entity (objects are also entities) 集合必須包含至少一個物件，並且被認為是一個實體（物件也是實體）。 Collections are useful when referring to several objects like a robot for instance 當引用多個物件（例如機器人）時，集合很有用 CoppeliaSim supports calculations based not only on objects, but also on collections CoppeliaSim支持不僅基於物件而且還基於集合的計算 For instance the collision detection module allows registering following collision pair(collection A; object B 例如，碰撞檢測模塊允許註冊以下碰撞(集合A；物件B) The collision checking algorithm will then check whether the collection A (any object composing it) collides with object B. 然後，碰撞檢查算法將檢查集合A（組成它的任何對象）是否與物件B碰撞。 Collections are collidable, measurable, detectable and renderable entities. 集合是可碰撞，可測量，可檢測和可渲染的實體。 \n', 'tags': '', 'url': 'Calculation modules.html'}, {'title': 'Writing code', 'text': 'CoppeliaSim is a highly customizable simulator: every aspect of a simulation can be customized CoppeliaSim是高度可定制的模擬器：可以自定義模擬的每個方面。 Moreover, the simulator itself can be customized and tailored so as to behave exactly as desired. 此外，模擬器本身可以進行定制和定制，以使其性能完全符合要求。 This is allowed through an elaborate Application Programming Interface (API). 這可以通過精心設計的應用程序編程接口（API）來實現。 Six different programming or coding approaches are supported, 支持六種不同的編程或編碼方法， each having particular advantages (and obviously also disadvantages) over the others 每個都比其他的具有特殊的優勢（顯然也有劣勢） but all six are mutually compatible (i.e. can be used at the same time, or even hand-in-hand) 但所有六種方法都是相互兼容的（即可以同時使用，甚至可以穿插使用）。 The control entity of a model, scene, or the simulator itself can be located inside: 模型，場景或模擬器本身的控制實體可以位於以下位置： \n ● embedded scrip t \xa0 \xa0 \xa0嵌入式腳本 ● an add-on\xa0  \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0\xa0 附加組件 ● a plugin  \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0\xa0 插件 ● remote API client  \xa0\xa0 遠程API客戶端   ● ROS node ● BlueZero node \n', 'tags': '', 'url': 'Writing code.html'}, {'title': 'Simulation', 'text': 'https://www.coppeliarobotics.com/helpFiles/en/simulation.htm \n', 'tags': '', 'url': 'Simulation.html'}, {'title': 'Tutorials', 'text': 'https://www.coppeliarobotics.com/helpFiles/en/tutorials.htm \n', 'tags': '', 'url': 'Tutorials.html'}, {'title': 'Random grouping', 'text': 'report \n 亂數分組程式流程: \n 1.抓出學員資料 \n 利用Python的requests模組來擷取網頁上的內容 \n 2.將抓出的資料轉為文字檔 \n 設定一變數將剛剛擷取出來的內容轉為文字檔方便之後做處理 \n 3.將文字檔內容轉為數列 \n 利用split語法將剛剛的文字內容以空格作為分割依據來建立一數列 \n 4.使用random模組將學員資料打亂 \n 將上述的數列內容由原本依照學號排序之順序改為亂數排序 \n 5.利用迴圈及判斷式列印文字 \n 利用第一層迴圈來顯示1~4組，接著利用判斷式來分辨目前分到第幾組了並再次利用迴圈來做組員分配 \n import requests\nimport random\nurl = "https://mde.tw/cd2020/downloads/2020spring_cd_2a_list.txt"\nMsource = requests.get(url)\n#print(Msource.text)\nmember = Msource.text\nmlist = member.split("\\n")\nmlist.pop()\n#print(member)\nmlen = len(mlist)\n#print(mlist[0:13])\nrandom.shuffle(mlist)\n\ng1 = 13\ng2 = 2*g1\ng3 = 3*g1\ng4 = int(mlen)\n\nprint("全班共",mlen,"人")\nfor i in range(1,5):\n    print("Group",i,":")\n    if (i == 1):\n        for j in range(0,g1):\n            print(mlist[j])\n            j += 1\n        print("-"*20)\n    elif (i == 2):\n        for m in range(g1,g2):\n            print(mlist[g1])\n            g1 += 1\n        print("-"*20)\n    elif (i == 3):\n        for k in range(g2,g3):\n            print(mlist[g2])\n            g2 += 1\n        print("-"*20)\n    elif (i == 4):\n        for l in range(g3,g4):\n            print(mlist[g3])\n            g3 += 1\n        print("-"*20)\nprint(mlist)\n \n \n \n \n =================== \n', 'tags': '', 'url': 'Random grouping.html'}, {'title': 'Assignment 2', 'text': 'https://github.com/s40723110/cd2020ag3/tree/master/PDF \n \n 國立虎尾科技大學 – 四設二甲 – 協同產品設計實習 – cd2020ag3 Assignment 2: \n   Due April 22, 2020 for class 2a and April 23, 2020 for class 2b. \n   1 . According to the material of Topic 0 and Topic 1, can you describe specifically what the mechanical design team need to do for accomplishing Assignment 1\'s four wheeled robot. \n  在設計車子時，首先我們要先有正確的思維方式，了解甚麼是協同合作、 協同合作的重要性、以及彼此在協同合作時的心態。再來我們會需要一些好的 工具去協同設計四輪車(ex: FIGMA,MARVEL, etc)。在設計前了解我們要做甚麼樣 的車子、車子的材料考量以及車子的用途也很重要。除此之外，我們還需要思 考如何讓整個流程最佳化，除了使用對的工具外，對於設計過程中產生的變數 進行實驗的順序也影響整個流程的流暢度。    2 . What do you need to know from https://cyberbotics.com/doc/guide/index to implement a four-wheeled robot?  \n Webots使用重點: \n 1 -模型 \n 2 -程式:使用python當作主要撰寫程式 \n Command Line Arguments(命令行參數)=從Linux 或 Mac或命令提示符（Windows）啟動Webots時，可以使用以下命令行選項： Usage: webots [options] [worldfile] \n Options: \n --help  Display this help message and exit. \n --version  Display version information and exit. \n --sysinfo  Display information about the system and exit. \n --mode=<mode>  Choose the startup mode, overriding application preferences. The <mode>  argument must be either pause, realtime, run or fast. \n --fullscreen  Start Webots in fullscreen. \n --minimize  Minimize the Webots window on startup. \n --batch  Prevent Webots from creating blocking pop-up windows. \n --stdout  Redirect the stdout of the controllers to the terminal. \n --stderr  Redirect the stderr of the controllers to the terminal. \n --stream[="key[=value];..."]  Start the Webots streaming server. Parameters may be  given as an option:  port=1234 - Start the streaming server on port 1234.  monitorActivity - Print a dot \'.\' on stdout every 5 seconds.  disableTextStreams - Disable the streaming of stdout and stderr. \n --log-performance=<file>[,<steps>]  Measure the performance of Webots and log it in the file specified in the  <file> argument. The optional <steps> argument is an integer value that  specifies how many steps are logged. If the --sysinfo option is used, the  system information is prepended into the log file. \n Please report any bug to http://www.cyberbotics.com/bug \n 3 - 環境:\xa0 \n 提供模擬環境，使用戶可創建物理特性(質量、摩擦係數等等)的3D虛擬世界，可添加各種不同輪型、飛行等機器人在景象中，且配備感測器、執行設備等(攝像機、馬達、接收器等)，也可對機器人做單獨編程。 \n Webots對像是模塊化且可參數化的，因此可以從這些示例開始輕鬆創建其他環境。這些示例的世界文件位於“ WEBOTS_HOME / projects / sample / environments /”目錄中。 位於“ WEBOTS_HOME /項目/車輛/世界”中的室外和城市環境，此處未顯示。 \n 使用以下感測器  1-顯示激光雷達路徑:青色線框顯示或隱藏場景中每個激光雷達的圖層（激光射線路徑）  2-顯示攝像機視錐:使用洋紅色線框顯示或隱藏場景中每個攝像機的OpenGL消隱視錐和記錄的圖像。  3-顯示距離傳感器:可以顯示或隱藏距離傳感器設備投射的射線。  4-顯示光位置:顯示或隱藏PointLight和SpotLight燈的位置。  5-顯示筆繪畫射線:可以顯示或隱藏筆設備繪畫的射線。  6-顯示雷達視錐:顯示或隱藏雷達視錐。 \n 4 -轉換(控制器、機器人): 遠程啟動Webots（ssh）:可以使用ssh（或類似命令）在遠程計算機上啟動Webot。但是，Webots僅能獲得與本地（在同一台計算機上）運行的X服務器的X11連接才能工作。當前無法將Webots圖形輸出重定向到另一台計算機。 \n 感想: \n 關於webots將模組套入環境中並撰寫程式或是使用控制器操作機器人或四輪驅動車都需要對使用者手冊有一定程度上的了解才能真正運用，但目前要說到特別熟悉卻不是如此，目前只能簡單操作將模組套入的部分，並依序設定部分操作控制鍵，未來將會在使用操作下更深入了解webots的各個條件設定。', 'tags': '', 'url': 'Assignment 2.html'}, {'title': 'Webots User Guide', 'text': '先安裝webot 可攜版本  載點位置 \n 官網window\xa0 電腦安裝版 \xa0 \xa0 R2020a-rev1 \n 可能會出現的問題 \n 請按下 其他資訊 即可安裝 \n \n \n \n https://cyberbotics.com/doc/guide/tutorials?version=R2020a-rev1 \n 第一次開啟webots 會跳出 webots guided tour \n 可以查看眾多內建模擬套件 \n 可從此開啟 \n \n webot 簡單操作 \n \n \n', 'tags': '', 'url': 'Webots User Guide.html'}, {'title': 'Getting Started with Webots', 'text': '\n 在我負責之部分第一項目首先講解到如何開始使用Webots的畫面與視窗，雖然這整本電子書都是在解說Webots介面使用，但在實際使用方面卻有所差別，以下為首要大略提到的標題及小標題的重點與補充說明。 \n 章節一；開始操作Webots \n 目錄: \n 介紹Webots  \n 原文重點: \n 1 -It offers a rapid prototyping environment, that allows the user to create 3D virtual worlds with physics properties such as mass, joints, friction coefficients, etc.   2 -The user can add simple passive objects or active objects called mobile robots. These robots can have different locomotion schemes (wheeled robots, ，legged robots, or flying robots).   3 -Webots is well suited for research and educational projects related to mobile robotics.    4 -even if you don\'t know these languages, you can still program the e-puck and Hemisson robots using a simple graphical programming language called   5 -If you don\'t want to use existing robot models provided within Webots and would like to create your own robot models, or add special objects in the simulated environments, you will need a basic knowledge of 3D computer graphics and VRML97 description language.    6 - A world file doesn\'t contain the controller code of the robots; it only specifies the name of the controller that is required for each robot.    7 -it can execute operations that can normally only be carried out by a human operator and not by a real robot. \n 中文概略解說: \n 提供模擬環境，使用戶可創建物理特性(質量、摩擦係數等等)的3D虛擬世界，可添加各種不同輪型、飛行等機器人在景象中，且配備感測器、執行設備等(攝像機、馬達、接收器等)，也可對機器人做單獨編程。 \n 包含大量機械人模型與程式控制器範例包(可將程式轉移到e-puck，DARwIn-OP等真實機器人)，以幫助用戶熟Webots 。 \n Webots在機器人技術上有一定程度的依靠，例如:移動機器人原型製作、多主體研究、教授機器人技術、機器人競賽等等涉略範圍。 \n 即使不知道python、c++、java等程式編碼的知識，依然可以使用BotStudio程式編碼器對機器人編輯。 如果不喜歡模組中原有的機器人範例包，也可另外使用3D、VRML97描述語言的程式來創建模型並導入。   Webots模擬組成條件:   1 -.wbt副檔名，定義多個既器人與環境，取決於外部(proto)，檔案儲存在每個Webots項目裡worlds子目錄中。   2 -在c++可進行修改可選之物理插件。   3 -機器人都由程式控制程序組成(python、c++、java)。   4 -對於環境中物件之方向、位置、形狀、顏色、亮度會仔細編輯。   5 -關節本身包含一個攝像頭，但World文件不包含機器人控制器代碼，只有指定每個機器人所需控制器名稱。 \n 管理者可執行是因為操作者正在執行的關係，並不是由機器人執行操作，適合任何編碼語言，但與常規控制器來說管理者將有權使用特權操作(包含模擬控制)。 \n 開始Webots之操作 \n 主軸:主要為解說命令式與操作系統步驟 \n 中文解說: \n 1 - Linux =執行Webots需輸入Webots指令 \n 2 - macOS =打開軟件包的目錄，點開Webots圖標 \n 3 - Windows =點選開始->程序文件/ Cyberbotics，並點擊Webots R2020a版本2之]圖標。 \n 也可以通過鍵入webots.bat從DOS控制台（cmd.exe）啟動Webots。 \n 僅從C：\\ Program Files \\ Webots \\ msys64 \\ mingw64 \\ bin目錄執行（假設Webots已安裝在C：\\ Program Files中），此命令才有效。 \n 如果將上述目錄添加到Path環境變量中，也可以從任何目錄工作。 \n 補充：直接從DOS控制台調用webots.exe可能無法工作，因為某些設置可能會丟失(請參閱webots.bat的內容)。 \n \n 4 - Command Line Arguments(命令行參數) =從Linux 或 Mac或命令提示符（Windows）啟動Webots時，可以使用以下命令行選項： \n Usage: webots [options] [worldfile]\n\nOptions:\n\n  --help\n    Display this help message and exit.\n\n  --version\n    Display version information and exit.\n\n  --sysinfo\n    Display information about the system and exit.\n\n  --mode=<mode>\n    Choose the startup mode, overriding application preferences. The <mode>\n    argument must be either pause, realtime, run or fast.\n\n  --fullscreen\n    Start Webots in fullscreen.\n\n  --minimize\n    Minimize the Webots window on startup.\n\n  --batch\n    Prevent Webots from creating blocking pop-up windows.\n\n  --stdout\n    Redirect the stdout of the controllers to the terminal.\n\n  --stderr\n    Redirect the stderr of the controllers to the terminal.\n\n  --stream[="key[=value];..."]\n    Start the Webots streaming server. Parameters may be\n    given as an option:\n      port=1234          - Start the streaming server on port 1234.\n      monitorActivity    - Print a dot \'.\' on stdout every 5 seconds.\n      disableTextStreams - Disable the streaming of stdout and stderr.\n\n  --log-performance=<file>[,<steps>]\n    Measure the performance of Webots and log it in the file specified in the\n    <file> argument. The optional <steps> argument is an integer value that\n    specifies how many steps are logged. If the --sysinfo option is used, the\n    system information is prepended into the log file.\n\nPlease report any bug to http://www.cyberbotics.com/bug \n 選擇worldfile參數指定要打開的.wbt文件的名稱。 \n 如果未指定，則Webots嘗試打開最近打開的文件。 \n \n --minimize 選項用於在啟動時最小化（圖標化）Webots窗口。 \n 將跳過啟動屏幕和最終的“歡迎對話框”。 \n 從選項中自動啟動Webot時，可以使用此選項來避免窗口混亂。 \n 補充 :當指定--minimize時，Webots自動使用快速模式。 \n \n --mode = <mode> 選項可用於以指定的模擬模式啟動Webot。 \n 四種可能的模擬模式是：暫停，實時，運行和快速。 \n 對應於Webots圖形用戶界面的模擬控制按鈕。將覆蓋但不修改Webots首選項中保存的啟動模式。 \n 例如:鍵入webots --mode = pause filename.wbt以暫停模式啟動Webots。 \n \n --sysinfo 選項會顯示有關當前系統的雜項信息，並退出Webots。 \n \n --stdout 和 --stderr 選項 具有將Webots控制台輸出重定向到調用終端或進程的作用。 \n 例如:1-這可用於將控制器輸出重定向到文件或將其通過管道傳遞給Shell命令。 \n \xa0 \xa0 \xa0 \xa0 2---stdout重定向控制器的stdout流，而--stderr重定向stderr流。 \n 補充 :stderr流還可能包含Webots錯誤或警告消息。 \n \n --stream 選項 啟動Webots流服務器。 \n 可以選擇更改流服務器的默認參數。 \n 此選項是一個字符串，其中包含參數鍵及其值的列表，並用分號分隔。 \n \n (上圖表描述受支持的選項。) \n 5 - Safe Mode(安全模式) = Webots可能無法啟動，因為阻止導致Webots或OpenGL崩潰的世界上。 在這種情況下，可以在安全模式下啟動Webots。 \n 安全模式迫使Webots從一個空白的世界開始，減少所有OpenGL選項並存儲這些首選項。 \n 因此只需在運行Webots的環境中設置環境變量WEBOTS_SAFE_MODE。 \n 以這種方式成功啟動後，必須取消設置此環境變量，再次打開世界並增加OpenGL首選項。 \n 補充 :此操作可能會導致新的崩潰。 \n on Windows(Windows操作) : 打開環境變量系統對話框。 \n 在Windows開始菜單的搜索欄中查找“環境變量”，點擊“編輯系統環境變量”，開啟“系統屬性”對話框，進入“高級”選項卡。 \n 點擊底部的環境變量按鈕。 \n 添加新的WEBOTS_SAFE_MODE用戶環境變量。 \n 用戶變量面板中，點擊“新建”按鈕，添加名為WEBOTS_SAFE_MODE的新用戶變量，其值為true。 \n 之後照常啟動Webots。 \n On Linux and macOS: 輸入以下兩行指令碼 \n export WEBOTS_SAFE_MODE=true\nwebots \n 即可開啟Webots。 \n \n 使用者介面 \n 3D視窗 \n 情景樹 \n 優先選項 \n Webots傳訊 \n 電腦設備 \n \n \n \n \n', 'tags': '', 'url': 'Getting Started with Webots.html'}]};